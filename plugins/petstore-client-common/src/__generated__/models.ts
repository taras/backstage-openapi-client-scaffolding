/* eslint-disable */
// tslint:disable
/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.6
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

export namespace Api {
	export interface ApiResponse {
		/**
		 * @type {number}
		 * @memberof ApiResponse
		 */
		code?: number;
		type?: string;
		message?: string;
	}

	export interface Category {
		/**
		 * @type {number}
		 * @memberof Category
		 */
		id?: number;
		name?: string;
	}

	export enum FindPetsByStatusStatusEnum {
		Available = 'available',
		Pending = 'pending',
		Sold = 'sold'
	}

	export interface Order {
		/**
		 * @type {number}
		 * @memberof Order
		 */
		id?: number;
		/**
		 * @type {number}
		 * @memberof Order
		 */
		petId?: number;
		/**
		 * @type {number}
		 * @memberof Order
		 */
		quantity?: number;
		shipDate?: string;
		/**
		 * @description <p>Order Status</p>
		 * @type {Api.Order.StatusEnum}
		 * @memberof Order
		 */
		status?: Api.Order.StatusEnum;
		complete?: boolean;
	}
	
	/**
	 * @export
	 * @namespace Order
	 */
	export namespace Order {
		/**
		 * <p>Order Status</p>
		 */
		export enum StatusEnum {
			Placed = 'placed',
			Approved = 'approved',
			Delivered = 'delivered'
		}
	
	}

	export interface Pet {
		/**
		 * @type {number}
		 * @memberof Pet
		 */
		id?: number;
		category?: Api.Category;
		name: string;
		photoUrls: string[];
		tags?: Api.Tag[];
		/**
		 * @description <p>pet status in the store</p>
		 * @type {Api.Pet.StatusEnum}
		 * @memberof Pet
		 */
		status?: Api.Pet.StatusEnum;
	}
	
	/**
	 * @export
	 * @namespace Pet
	 */
	export namespace Pet {
		/**
		 * <p>pet status in the store</p>
		 */
		export enum StatusEnum {
			Available = 'available',
			Pending = 'pending',
			Sold = 'sold'
		}
	
	}

	export interface Tag {
		/**
		 * @type {number}
		 * @memberof Tag
		 */
		id?: number;
		name?: string;
	}

	export interface User {
		/**
		 * @type {number}
		 * @memberof User
		 */
		id?: number;
		username?: string;
		firstName?: string;
		lastName?: string;
		email?: string;
		password?: string;
		phone?: string;
		/**
		 * @description <p>User Status</p>
		 * @type {number}
		 * @memberof User
		 */
		userStatus?: number;
	}

}

